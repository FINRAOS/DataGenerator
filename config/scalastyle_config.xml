<scalastyle commentFilter="enabled">
    <name>Scalastyle standard configuration</name>
    <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxFileLength"><![CDATA[800]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.file.HeaderMatchesChecker" enabled="false">
        <parameters>
            <parameter name="header"><![CDATA[<!--
  ~ Copyright DataGenerator Contributors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->]]></parameter>
        </parameters>
    </check>
    <!-- Catches plus sign in type parameter variance annotations, not just the plus operator. -->
	<check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="false"></check>
	<!-- Not sure what the point of this check is. -->
    <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[160]]></parameter>
            <parameter name="tabSize"><![CDATA[4]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
        <parameters>
            <parameter name="maxParameters"><![CDATA[8]]></parameter>
        </parameters>
    </check>
	<!-- 
	The magic-number checker has limited usefulness because it flags default values in method parameters.
	-->
    <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false">
        <parameters>
            <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker"
           enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker"
           enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
	<!--
	Best to avoid null in Scala code, but sometimes necessary, e.g., if writing a library to be used by Java code,
	even something like assert(param != null) would violate the NullChecker.
	-->
    <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
        <parameters>
            <parameter name="maxTypes"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
        <parameters>
            <parameter name="maximum"><![CDATA[75]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
        <parameters>
            <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
            <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLength"><![CDATA[125]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9_]*(_=)?$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
        <parameters>
            <parameter name="maxMethods"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
    <!-- Not sure what the point of this check is. -->
	<check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.WhileChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.VarLocalChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[^+?[A-Za-z0-9_]( [<>]: [A-Za-z0-9]+)?$]]></parameter>
        </parameters>
    </check>
	<!--
	IntelliJ auto-generates wildcard imports... Anyway, they're easier to read and maintain.
	-->
    <check level="warning" class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="false">
        <parameters>
            <parameter name="allowed"><![CDATA[2]]></parameter>
            <parameter name="ignoreRegex"><![CDATA[^"\s*"$]]></parameter>
        </parameters>
    </check>
	<!-- Disabled because we might not want an import to take effect in the first part of some code. -->
    <check level="warning" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="false"></check>
</scalastyle>